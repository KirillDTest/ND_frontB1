//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////FIRST VARIANT///////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////

// var meetingPoint = function (S,v1,v2) {
// 	// в т. встречи S=s1+s2=v1*t-v2*t=t*(v1+v2);
// 	// поскольку они двигю друг к другу, то скорость их сближения 1-го ко 2-му=v1+v2
// 	// (если бы 2-й не двигался, то 1-й бы приближался к нему со скоростью v1)

// 	// поскольку они движутся навстречу друг другу, то в момент встречи они преодолеют всю дистанцию, т.е. S=s1+s2;

// 	// к точке встречи они ехали одинаковое количество времени
// 	// (т.е. за время t1 1й проехал s1, а 2-й за то же время s2,
// 	// и т.к. S=s1+s2, значит вся дистанция преодолена,
// 	// а значит и время за которое каждый преодолел свой кусок до встречи
// 	// одинаковое)

// 	// т.е. они встретятся на расстоянии от первого пункта:
// 	var s1=S*(1-(v2/(v1+v2)));
// 	return s1;
// 	}

// console.log(meetingPoint(10,1,1));


//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////SECOND VARIANT//////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
// var meetingPoint = function (S,v1,v2) {
// 	var s1=0;				   //1-й нах. в 1 нас.пункте
// 	var s2=S;                  //2-й находится на расстоянии S от 1-го нас.п.
	
// 	if (v1>v2 || v1==v2) {
// 		do {
// 			 for (var i=0; i<v2; i++) { //цикл на каждой итерации показывает какое расстояние преодолел 2-й велосипедист со скоростью v2
// 			 						    //количество итераций = v2
// 				s2--;              //+1 потому что 1-й отдаляется от 1-го нас.пункта
// 				for (var j=0; j<v1; j++) { //цикл на каждой итерации показывает какое расстояние преодолел 1-й велосипедист со скоростью v1
// 										   //этот цикл выполняется быстрее первого т.к. 1й двигается быстрее 2-го, а значит и проходит в 2 раза больше дистанцию чем первый 
// 										   //поэтому в цикле количество итераций = v1
// 					s1++;          //-1 потому что 2-й приближается к 1-му нас.пункту
// 					if (s1==s2) return s1;	
// 				}
// 			}
// 		}
// 		while (s1!=s2)
// 	}

// 	else {
// 		do {
// 			for (var i=0; i<v1; i++) {
// 				s1++;
// 				for (var j=0; j<v2; j++) {
// 					s2--;
// 					if (s1==s2) return s1;
// 				}
// 			}
// 		}
// 		while (s1!=s2)
// 	}
// }

// console.log(meetingPoint(20,1,2));




//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////THIRD VARIANT//////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
var meetingPoint = function (S,v1,v2) {
	var s1=0;
	var s2=0;
	S=S*1000;					 //расстояние в метры
	v1=5*v1/18;					 //скорость в метры в сек
	v2=5*v2/18;                  
	var dS=S;                    //расстояние между сближающимися велосипедистами
	var t=Math.round(S/(v1));    //время, за которое прошел бы 1-ый всю дистанцию S
								 //оно задано для всей дистанции на случай если 2-й едет на много медленне или не выехал вообще
	
		var i=0;
		do {
				if (v1>v2 || v1==v2) {
					s2 = s2+v2;   //расстояние которое проходит 1-й за 1 сек (т.е. за 1 итерацию)
					dS = S-s1-s2; //расстояние между сближающимися обьектами
					if (dS<=0) {return s1/1000;}
					s1 = s1+v1;   //расстояние которое проходит 2-й за 1 сек (т.е. за 1 итерацию)
					
				}
				else {
					s1 = s1+v1;   //расстояние за 1 сек (т.е. за 1 итерацию)
					dS = S-s1-s2; //расстояние между сближающимися велосипедистами
				if (dS<=0) {return s1/1000;}
					s2 = s2+v2;   //расстояние за 1 сек (т.е. за 1 итерацию)
					}
				i++;
			}
		while (i<t)
	}

console.log(meetingPoint(20,1,2));


